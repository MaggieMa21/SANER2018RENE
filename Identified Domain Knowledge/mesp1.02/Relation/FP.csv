[] add---> [node add node],[] add---> [node evaluates object],[] add---> [node get symbol],[] linked---> [list add to head],[] linked---> [list add to tail],[] linked---> [list create node],[] linked---> [list get head],[] linked---> [list get size],[] linked---> [list get tail],[] linked---> [list insert after],[] linked---> [list insert before],[] linked---> [list is empty],[] linked---> [list linked list],[] linked---> [list remove head],[] linked---> [list remove node],[] linked---> [list remove tail],[] stack---> [get stack],[] stack---> [peek object],[] stack---> [pop object],[] stack---> [push object],[absolute function] HasProperty---> [absolute function],[acos] function---> [],[asin function] HasProperty---> [asin function],[bag insert] IsA--> [insert],[bag] add---> [object],[bag] contains---> [object],[bag] ensure---> [capacity],[bag] HasProperty---> [bag],[bag] HasProperty---> [capacity],[bag] HasProperty---> [index of],[bag] HasProperty---> [object],[bag] HasProperty---> [size],[bag] remove---> [object],[combin function] IsA--> [function],[cos function] HasProperty---> [cos function],[div node] evaluates---> [object],[e function] HasProperty---> [e function],[exponent function] HasProperty---> [exponent function],[expression check before] accept---> [],[expression tree] build---> [object],[expression tree] HasProperty---> [expression tree],[expression tree] parse---> [object],[expression] evaluates---> [object],[expression] HasProperty---> [parent],[expression] is---> [descendent],[expression] parse---> [exception get description],[expression] parse---> [exception get expression parse exception],[expression] parse---> [exception get index],[fact function] HasProperty---> [fact function],[floor function] HasProperty---> [floor function],[function cosh function] IsA--> [function],[function map] HasProperty---> [function map],[function map] HasProperty---> [function names],[function map] HasProperty---> [function],[function map] HasProperty---> [functions],[function map] HasProperty---> [load default functions],[function map] is---> [case sensitive],[function map] IsA--> [map],[function map] remove---> [object],[function node] add---> [object],[function node] evaluates---> [object],[function node] HasProperty---> [function node],[function node] remove---> [object],[list insert] IsA--> [insert],[log function] HasProperty---> [log function],[max function] HasProperty---> [max function],[min function] HasProperty---> [min function],[mod function] HasProperty---> [mod function],[mult node] evaluates---> [object],[n cr] IsA--> [cr],[node insert object] IsA--> [object],[node] HasProperty---> [list],[node] HasProperty---> [node],[node] HasProperty---> [user object],[node] remove---> [object],[number function] IsA--> [function],[op node set] left---> [child],[pascals triangle] HasProperty---> [pascals triangle],[pascals triangle] reset---> [object],[peek object] IsA--> [object],[pi function] HasProperty---> [pi function],[pop object] IsA--> [object],[pow function] HasProperty---> [pow function],[pow node] evaluates---> [object],[pow node] HasProperty---> [pow node],[pow node] HasProperty---> [symbol],[push object] IsA--> [object],[round function] HasProperty---> [round function],[sign function] HasProperty---> [sign function],[sin function] HasProperty---> [sin function],[sub node] evaluates---> [object],[sub node] HasProperty---> [sub node],[subjects] accept---> [number parameter],[sum function] HasProperty---> [sum function],[tan function] HasProperty---> [tan function],[term node] HasProperty---> [term node],[term node] is---> [valid name],[term node] IsA--> [node],[test] HasProperty---> [main],[to] string---> [],[user object] IsA--> [object],[value node] evaluates---> [object],[value node] HasProperty---> [value node],[variable map] HasProperty---> [value],[variable map] HasProperty---> [values],[variable map] HasProperty---> [variable map],[variable map] HasProperty---> [variable names],[variable map] is---> [case sensitive],[variable map] remove---> [object],[variable node] evaluates---> [object],[variable node] HasProperty---> [variable node]